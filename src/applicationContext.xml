<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	<context:component-scan base-package="com.legou">  
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>  
	</context:component-scan>  
	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:jdbc.properties"/>  
    </bean> 
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver_class}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<!-- <property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property> -->
		<property name="dataSource">
			<ref bean="dataSource"/>
		</property>
		<property name="mappingResources">
			<list>
				<value>com/legou/models/User.hbm.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<!-- 注解式事务 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/>
	<!-- 声明式事务 -->
	<!-- <tx:advice id="txAdvice" transaction-manager="txManager">  
	    <tx:attributes>  
	        <tx:method name="save*" propagation="REQUIRED" />  
	        <tx:method name="add*" propagation="REQUIRED" />  
	        <tx:method name="create*" propagation="REQUIRED" />  
	        <tx:method name="insert*" propagation="REQUIRED" />  
	        <tx:method name="update*" propagation="REQUIRED" />  
	        <tx:method name="merge*" propagation="REQUIRED" />  
	        <tx:method name="del*" propagation="REQUIRED" />  
	        <tx:method name="remove*" propagation="REQUIRED" />  
	        <tx:method name="put*" propagation="REQUIRED" />  
	        <tx:method name="use*" propagation="REQUIRED"/>  
	        hibernate4必须配置为开启事务 否则 getCurrentSession()获取不到  
	        <tx:method name="get*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="count*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="find*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="list*" propagation="REQUIRED" read-only="true" />  
	        <tx:method name="*" read-only="true" />  
	    </tx:attributes>  
</tx:advice>   -->
	
	
	<bean class="com.legou.modules.MyBeanPostProcessor"/>
	
	<!-- <bean id="target" class="com.legou.services.UserLogin"/>
	<bean id="checkuser" class="com.legou.advices.CheckUserAdvice"/>
	<bean id="checkuserAfter" class="com.legou.advices.CheckUserAftAdvice"/>
	<bean id="userlogin" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces" value="com.legou.interfaces.Login">
		</property> 接口
		<property name="interceptorNames">
			<list>
			<value>checkuser</value>
			<value>checkuserAfter</value>
			</list>
		</property>前置通知
		<property name="target" ref="target"/> 接口实例
	</bean> -->
	
	
	
	<bean id="user" class="com.legou.models.User">
	</bean>
	<bean id="userLogin" class="com.legou.services.imples.UserLogin"/>
	
	<!-- DAO -->
	<bean id="OrderGoodsDAO" class="com.legou.dao.impl.OrderGoodsDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="GoodsDAO" class="com.legou.dao.impl.GoodsDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="AdministratorDAO"
		class="com.legou.dao.impl.AdministratorDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="OrdersDAO" class="com.legou.dao.impl.OrdersDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="AttrValueDAO" class="com.legou.dao.impl.AttrValueDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="AddgoodsDAO" class="com.legou.dao.impl.AddgoodsDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="GoodstypeDAO" class="com.legou.dao.impl.GoodstypeDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="RecieverDAO" class="com.legou.dao.impl.RecieverDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="ClerkDAO" class="com.legou.dao.impl.ClerkDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="ShoppingcartDAO"
		class="com.legou.dao.impl.ShoppingcartDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="GoodstAttrDAO" class="com.legou.dao.impl.GoodstAttrDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="CustomerDAO" class="com.legou.dao.impl.CustomerDAO">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean></beans>